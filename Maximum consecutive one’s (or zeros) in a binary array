Given an array arr[] consisting of only 0’s and 1’s, return count of the maximum number of consecutive 1’s or 0’s present in the array. 

Examples:

Input: arr[] = [0, 1, 0, 1, 1, 1, 1]
Output: 4
Explanation: The maximum number of consecutive 1’s in the array is 4 from index 3-6.
Input: arr[] = [0, 0, 1, 0, 1, 0]
Output: 2
Explanation: The maximum number of consecutive 0’s in the array is 2 from index 0-1.
Input: arr[] = [0, 0, 0, 0]
Output: 4
Explanation: The maximum number of consecutive 0’s in the array is 4.
Constraints:
1 ≤ arr.size() ≤ 105
0 ≤ arr[i] ≤ 1
----------------------------------------------------------------------------------------
soln:
class Solution {
    public int maxConsecBits(int[] arr) {
        int a[]=arr;
        int n=a.length;
        int c=0,d=0;
        int max1=Integer.MIN_VALUE;
        int max2=Integer.MIN_VALUE;
        
        for(int i=0;i<n;i++)
        {
            if(a[i]==0)
            {
                c++;
            }
            else if(a[i]==1)
            {
                max1=Math.max(max1,c);
                c=0;
            }
             if(a[i]==1)
            {
                d++;
            }
            else if(a[i]==0)
            {
               max2=Math.max(max2,d);
                d=0;
            }
        }
         max1=Math.max(max1,c);
         max2=Math.max(max2,d);
        if(max1>max2)
        {
            return max1;
        }
        return max2;
        // code here
        
    }
}
